class Solution(object):    def uniqueMorseRepresentations(self, words):        """        :type words: List[str]        :rtype: int        """        new_string=[]        lis=[]        codes={"a":".-","b":"-...","c":"-.-.","d":"-..","e":".","f":"..-.","g":"--.","h":"....","i":"..","j":".---","k":"-.-","l":".-..","m":"--","n":"-.","o":"---","p":".--.","q":"--.-","r":".-.","s":"...","t":"-","u":"..-","v":"...-","w":".--","x":"-..-","y":"-.--","z":"--.."}        #print codes["a"]        allstrings={}        #name=["gin"]        for each in words:            lis=[]            for letter in each:                lis.append(codes[letter])            allstrings[str(each)]="".join(lis)        count=0        new_pat={}        for i in allstrings.values():            if(i in new_pat):                new_pat[i]+=1                print i            else:                new_pat[i]=1        #print new_pat        return(len(new_pat))        #print allstrings.values()