##### class Solution(object):#     def isPalindrome(self, head):#         """#         :type head: ListNode#         :rtype: bool#         """#         node_= head#         rev=head#         count=0#         half=0#         def check(list1,list2):#             for i in range(len(list1)):#                 if(len(list1)==len(list2) and len(list1)!=0):#                     if(list1[i]==list2[i]):#                         list1.remove(list1[i])#                         list2.remove(list2[i])#                     else:#                         return False#                 else:#                     return False#             if(len(list1)==0 and len(list2)==0):#                 return True###             #print result#             if result:#                 return True#             else:#                 return False#         while(node_):#             count=count+1#             node_=node_.next##         if(count==0 or count==1):#             return True##         elif(count%2==0):#             list1=list2=head#             first_half=[]#             second_half=[]#             lengt=limit=count/2#             while(lengt):#                 first_half.append(list1.val)#                 lengt=lengt-1#                 list1=list1.next#             #print first_half##             while(limit):#                 list2=list2.next#                 limit=limit-1#             while(list2):#                 second_half.append(list2.val)#                 list2=list2.next##             second_half.reverse()#             #print second_half###             ans=check(first_half,second_half)#             return ans####         else:#             list1=list2=head#             first_half=[]#             second_half=[]#             midnode=limit=lengt=(count/2)#             while(lengt):#                 first_half.append(list1.val)#                 lengt=lengt-1#                 list1=list1.next#             #print first_half##             while(limit+1):#                 list2=list2.next#                 limit=limit-1#             while(list2):#                 second_half.append(list2.val)#                 list2=list2.next#             second_half.reverse()#             print second_half##             ans=check(first_half,second_half)#             return ans